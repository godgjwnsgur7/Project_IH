//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Input/MainInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @MainInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @MainInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""MainInputActions"",
    ""maps"": [
        {
            ""name"": ""InGame"",
            ""id"": ""b1fe882a-13d1-44e3-a2b4-f67b1e0335cc"",
            ""actions"": [
                {
                    ""name"": ""ArrowKey"",
                    ""type"": ""Value"",
                    ""id"": ""f70674f4-ed7a-4e5b-aa89-b5c24d0d03a3"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SpaceKey"",
                    ""type"": ""Button"",
                    ""id"": ""354b95dd-9076-4f08-9778-0797692fd590"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""AKey"",
                    ""type"": ""Button"",
                    ""id"": ""d18645b8-cfc8-44a4-9de9-c8b51ec68693"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SKey"",
                    ""type"": ""Button"",
                    ""id"": ""fa27ae3a-c0d9-4ad5-9092-5c17ca2d10cc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""DKey"",
                    ""type"": ""Button"",
                    ""id"": ""39259908-598d-4a90-b1b2-d8371751b97f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""FKey"",
                    ""type"": ""Button"",
                    ""id"": ""337e673d-aa65-43ad-b767-8ebc7d9d24ae"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ZKey"",
                    ""type"": ""Button"",
                    ""id"": ""8cac2265-808e-4862-8c07-7078db29bf21"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""XKey"",
                    ""type"": ""Button"",
                    ""id"": ""3e4c6694-629e-4481-8983-33fe65e8aad0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CKey"",
                    ""type"": ""Button"",
                    ""id"": ""4c65e448-6d5c-44d0-8257-4cd10b50b195"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""VKey"",
                    ""type"": ""Button"",
                    ""id"": ""0fda1d8f-640a-4293-ba26-357c49b61579"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Num1Key"",
                    ""type"": ""Button"",
                    ""id"": ""d3d40446-1368-4e35-8112-24a05463b794"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Num2Key"",
                    ""type"": ""Button"",
                    ""id"": ""dbcb70cc-4666-44e7-b6bb-3a042386e4c1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""edadc6c2-28c7-46ec-9a2a-74238b943552"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""SpaceKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Arrow"",
                    ""id"": ""58efabd2-6199-4460-85f8-781f4b30f43d"",
                    ""path"": ""2DVector(mode=1)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ArrowKey"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""031ed740-b113-47fd-907e-a35805ce0c2c"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ArrowKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""bf5481a6-114b-4111-be29-3f168ec3a7a7"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ArrowKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""f7e624b4-ab14-488f-94d3-1c78da2389dd"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ArrowKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e5e23daf-efa6-4e91-b6e4-3f885fa6a82f"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ArrowKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""69de52c1-441a-4cc4-b651-97447cdf2e70"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""AKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""776c1c01-d1ec-415b-bef6-6cf5c667df8a"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""SKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""996111ec-491a-4849-9f67-90a3edff2762"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""DKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""58aa4d5a-dac2-4728-9975-a81f61bf1d2f"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""FKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c4148e22-5ec0-47da-bd8a-ea7a7d066c56"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""ZKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bff973fe-b058-42da-8ad4-8840fb088114"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""XKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8d18bce7-78fd-4a89-9b90-a23348eda40b"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""CKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""65fe7857-7e58-44c4-bfe9-208c9c88977e"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""VKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7d44ffa1-99ac-4f16-9eed-90ecdf5aea2c"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Num1Key"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1f3c2b24-4b89-4f29-863d-84bfd663ecd2"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Num2Key"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""OutGame"",
            ""id"": ""6b7d8e8f-195e-46e5-9ad8-2670d1700e5b"",
            ""actions"": [],
            ""bindings"": []
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""PC"",
            ""bindingGroup"": ""PC"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // InGame
        m_InGame = asset.FindActionMap("InGame", throwIfNotFound: true);
        m_InGame_ArrowKey = m_InGame.FindAction("ArrowKey", throwIfNotFound: true);
        m_InGame_SpaceKey = m_InGame.FindAction("SpaceKey", throwIfNotFound: true);
        m_InGame_AKey = m_InGame.FindAction("AKey", throwIfNotFound: true);
        m_InGame_SKey = m_InGame.FindAction("SKey", throwIfNotFound: true);
        m_InGame_DKey = m_InGame.FindAction("DKey", throwIfNotFound: true);
        m_InGame_FKey = m_InGame.FindAction("FKey", throwIfNotFound: true);
        m_InGame_ZKey = m_InGame.FindAction("ZKey", throwIfNotFound: true);
        m_InGame_XKey = m_InGame.FindAction("XKey", throwIfNotFound: true);
        m_InGame_CKey = m_InGame.FindAction("CKey", throwIfNotFound: true);
        m_InGame_VKey = m_InGame.FindAction("VKey", throwIfNotFound: true);
        m_InGame_Num1Key = m_InGame.FindAction("Num1Key", throwIfNotFound: true);
        m_InGame_Num2Key = m_InGame.FindAction("Num2Key", throwIfNotFound: true);
        // OutGame
        m_OutGame = asset.FindActionMap("OutGame", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // InGame
    private readonly InputActionMap m_InGame;
    private List<IInGameActions> m_InGameActionsCallbackInterfaces = new List<IInGameActions>();
    private readonly InputAction m_InGame_ArrowKey;
    private readonly InputAction m_InGame_SpaceKey;
    private readonly InputAction m_InGame_AKey;
    private readonly InputAction m_InGame_SKey;
    private readonly InputAction m_InGame_DKey;
    private readonly InputAction m_InGame_FKey;
    private readonly InputAction m_InGame_ZKey;
    private readonly InputAction m_InGame_XKey;
    private readonly InputAction m_InGame_CKey;
    private readonly InputAction m_InGame_VKey;
    private readonly InputAction m_InGame_Num1Key;
    private readonly InputAction m_InGame_Num2Key;
    public struct InGameActions
    {
        private @MainInputActions m_Wrapper;
        public InGameActions(@MainInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @ArrowKey => m_Wrapper.m_InGame_ArrowKey;
        public InputAction @SpaceKey => m_Wrapper.m_InGame_SpaceKey;
        public InputAction @AKey => m_Wrapper.m_InGame_AKey;
        public InputAction @SKey => m_Wrapper.m_InGame_SKey;
        public InputAction @DKey => m_Wrapper.m_InGame_DKey;
        public InputAction @FKey => m_Wrapper.m_InGame_FKey;
        public InputAction @ZKey => m_Wrapper.m_InGame_ZKey;
        public InputAction @XKey => m_Wrapper.m_InGame_XKey;
        public InputAction @CKey => m_Wrapper.m_InGame_CKey;
        public InputAction @VKey => m_Wrapper.m_InGame_VKey;
        public InputAction @Num1Key => m_Wrapper.m_InGame_Num1Key;
        public InputAction @Num2Key => m_Wrapper.m_InGame_Num2Key;
        public InputActionMap Get() { return m_Wrapper.m_InGame; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InGameActions set) { return set.Get(); }
        public void AddCallbacks(IInGameActions instance)
        {
            if (instance == null || m_Wrapper.m_InGameActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_InGameActionsCallbackInterfaces.Add(instance);
            @ArrowKey.started += instance.OnArrowKey;
            @ArrowKey.performed += instance.OnArrowKey;
            @ArrowKey.canceled += instance.OnArrowKey;
            @SpaceKey.started += instance.OnSpaceKey;
            @SpaceKey.performed += instance.OnSpaceKey;
            @SpaceKey.canceled += instance.OnSpaceKey;
            @AKey.started += instance.OnAKey;
            @AKey.performed += instance.OnAKey;
            @AKey.canceled += instance.OnAKey;
            @SKey.started += instance.OnSKey;
            @SKey.performed += instance.OnSKey;
            @SKey.canceled += instance.OnSKey;
            @DKey.started += instance.OnDKey;
            @DKey.performed += instance.OnDKey;
            @DKey.canceled += instance.OnDKey;
            @FKey.started += instance.OnFKey;
            @FKey.performed += instance.OnFKey;
            @FKey.canceled += instance.OnFKey;
            @ZKey.started += instance.OnZKey;
            @ZKey.performed += instance.OnZKey;
            @ZKey.canceled += instance.OnZKey;
            @XKey.started += instance.OnXKey;
            @XKey.performed += instance.OnXKey;
            @XKey.canceled += instance.OnXKey;
            @CKey.started += instance.OnCKey;
            @CKey.performed += instance.OnCKey;
            @CKey.canceled += instance.OnCKey;
            @VKey.started += instance.OnVKey;
            @VKey.performed += instance.OnVKey;
            @VKey.canceled += instance.OnVKey;
            @Num1Key.started += instance.OnNum1Key;
            @Num1Key.performed += instance.OnNum1Key;
            @Num1Key.canceled += instance.OnNum1Key;
            @Num2Key.started += instance.OnNum2Key;
            @Num2Key.performed += instance.OnNum2Key;
            @Num2Key.canceled += instance.OnNum2Key;
        }

        private void UnregisterCallbacks(IInGameActions instance)
        {
            @ArrowKey.started -= instance.OnArrowKey;
            @ArrowKey.performed -= instance.OnArrowKey;
            @ArrowKey.canceled -= instance.OnArrowKey;
            @SpaceKey.started -= instance.OnSpaceKey;
            @SpaceKey.performed -= instance.OnSpaceKey;
            @SpaceKey.canceled -= instance.OnSpaceKey;
            @AKey.started -= instance.OnAKey;
            @AKey.performed -= instance.OnAKey;
            @AKey.canceled -= instance.OnAKey;
            @SKey.started -= instance.OnSKey;
            @SKey.performed -= instance.OnSKey;
            @SKey.canceled -= instance.OnSKey;
            @DKey.started -= instance.OnDKey;
            @DKey.performed -= instance.OnDKey;
            @DKey.canceled -= instance.OnDKey;
            @FKey.started -= instance.OnFKey;
            @FKey.performed -= instance.OnFKey;
            @FKey.canceled -= instance.OnFKey;
            @ZKey.started -= instance.OnZKey;
            @ZKey.performed -= instance.OnZKey;
            @ZKey.canceled -= instance.OnZKey;
            @XKey.started -= instance.OnXKey;
            @XKey.performed -= instance.OnXKey;
            @XKey.canceled -= instance.OnXKey;
            @CKey.started -= instance.OnCKey;
            @CKey.performed -= instance.OnCKey;
            @CKey.canceled -= instance.OnCKey;
            @VKey.started -= instance.OnVKey;
            @VKey.performed -= instance.OnVKey;
            @VKey.canceled -= instance.OnVKey;
            @Num1Key.started -= instance.OnNum1Key;
            @Num1Key.performed -= instance.OnNum1Key;
            @Num1Key.canceled -= instance.OnNum1Key;
            @Num2Key.started -= instance.OnNum2Key;
            @Num2Key.performed -= instance.OnNum2Key;
            @Num2Key.canceled -= instance.OnNum2Key;
        }

        public void RemoveCallbacks(IInGameActions instance)
        {
            if (m_Wrapper.m_InGameActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IInGameActions instance)
        {
            foreach (var item in m_Wrapper.m_InGameActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_InGameActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public InGameActions @InGame => new InGameActions(this);

    // OutGame
    private readonly InputActionMap m_OutGame;
    private List<IOutGameActions> m_OutGameActionsCallbackInterfaces = new List<IOutGameActions>();
    public struct OutGameActions
    {
        private @MainInputActions m_Wrapper;
        public OutGameActions(@MainInputActions wrapper) { m_Wrapper = wrapper; }
        public InputActionMap Get() { return m_Wrapper.m_OutGame; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(OutGameActions set) { return set.Get(); }
        public void AddCallbacks(IOutGameActions instance)
        {
            if (instance == null || m_Wrapper.m_OutGameActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_OutGameActionsCallbackInterfaces.Add(instance);
        }

        private void UnregisterCallbacks(IOutGameActions instance)
        {
        }

        public void RemoveCallbacks(IOutGameActions instance)
        {
            if (m_Wrapper.m_OutGameActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IOutGameActions instance)
        {
            foreach (var item in m_Wrapper.m_OutGameActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_OutGameActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public OutGameActions @OutGame => new OutGameActions(this);
    private int m_PCSchemeIndex = -1;
    public InputControlScheme PCScheme
    {
        get
        {
            if (m_PCSchemeIndex == -1) m_PCSchemeIndex = asset.FindControlSchemeIndex("PC");
            return asset.controlSchemes[m_PCSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    public interface IInGameActions
    {
        void OnArrowKey(InputAction.CallbackContext context);
        void OnSpaceKey(InputAction.CallbackContext context);
        void OnAKey(InputAction.CallbackContext context);
        void OnSKey(InputAction.CallbackContext context);
        void OnDKey(InputAction.CallbackContext context);
        void OnFKey(InputAction.CallbackContext context);
        void OnZKey(InputAction.CallbackContext context);
        void OnXKey(InputAction.CallbackContext context);
        void OnCKey(InputAction.CallbackContext context);
        void OnVKey(InputAction.CallbackContext context);
        void OnNum1Key(InputAction.CallbackContext context);
        void OnNum2Key(InputAction.CallbackContext context);
    }
    public interface IOutGameActions
    {
    }
}
